Compiled from "LocalDiskRepositoryTestCase.java"
public abstract class org.eclipse.jgit.junit.LocalDiskRepositoryTestCase {
  private static final boolean useMMAP;

  protected org.eclipse.jgit.lib.PersonIdent author;

  protected org.eclipse.jgit.lib.PersonIdent committer;

  private final java.util.List<org.eclipse.jgit.lib.Repository> toClose;

  private java.io.File tmp;

  private org.eclipse.jgit.junit.MockSystemReader mockSystemReader;

  static final boolean $assertionsDisabled;

  public org.eclipse.jgit.junit.LocalDiskRepositoryTestCase();
    Code:
       0: aload_0       
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0       
       5: new           #3                  // class java/util/ArrayList
       8: dup           
       9: invokespecial #4                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #5                  // Field toClose:Ljava/util/List;
      15: return        

  public void setUp() throws java.lang.Exception;
    Code:
       0: aload_0       
       1: ldc           #6                  // String jgit_test_
       3: ldc           #7                  // String _tmp
       5: invokestatic  #8                  // Method java/io/File.createTempFile:(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;
       8: putfield      #9                  // Field tmp:Ljava/io/File;
      11: aload_0       
      12: getfield      #9                  // Field tmp:Ljava/io/File;
      15: invokestatic  #10                 // Method org/eclipse/jgit/junit/LocalDiskRepositoryTestCase$CleanupThread.deleteOnShutdown:(Ljava/io/File;)V
      18: aload_0       
      19: getfield      #9                  // Field tmp:Ljava/io/File;
      22: invokevirtual #11                 // Method java/io/File.delete:()Z
      25: ifeq          38
      28: aload_0       
      29: getfield      #9                  // Field tmp:Ljava/io/File;
      32: invokevirtual #12                 // Method java/io/File.mkdir:()Z
      35: ifne          68
      38: new           #13                 // class java/io/IOException
      41: dup           
      42: new           #14                 // class java/lang/StringBuilder
      45: dup           
      46: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      49: ldc           #16                 // String Cannot create 
      51: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: aload_0       
      55: getfield      #9                  // Field tmp:Ljava/io/File;
      58: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      61: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      64: invokespecial #20                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      67: athrow        
      68: aload_0       
      69: new           #21                 // class org/eclipse/jgit/junit/MockSystemReader
      72: dup           
      73: invokespecial #22                 // Method org/eclipse/jgit/junit/MockSystemReader."<init>":()V
      76: putfield      #23                 // Field mockSystemReader:Lorg/eclipse/jgit/junit/MockSystemReader;
      79: aload_0       
      80: getfield      #23                 // Field mockSystemReader:Lorg/eclipse/jgit/junit/MockSystemReader;
      83: new           #24                 // class org/eclipse/jgit/storage/file/FileBasedConfig
      86: dup           
      87: new           #25                 // class java/io/File
      90: dup           
      91: aload_0       
      92: getfield      #9                  // Field tmp:Ljava/io/File;
      95: ldc           #26                 // String usergitconfig
      97: invokespecial #27                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
     100: getstatic     #28                 // Field org/eclipse/jgit/util/FS.DETECTED:Lorg/eclipse/jgit/util/FS;
     103: invokespecial #29                 // Method org/eclipse/jgit/storage/file/FileBasedConfig."<init>":(Ljava/io/File;Lorg/eclipse/jgit/util/FS;)V
     106: putfield      #30                 // Field org/eclipse/jgit/junit/MockSystemReader.userGitConfig:Lorg/eclipse/jgit/storage/file/FileBasedConfig;
     109: aload_0       
     110: aload_0       
     111: invokevirtual #31                 // Method getCeilings:()Ljava/util/List;
     114: invokespecial #32                 // Method ceilTestDirectories:(Ljava/util/List;)V
     117: aload_0       
     118: getfield      #23                 // Field mockSystemReader:Lorg/eclipse/jgit/junit/MockSystemReader;
     121: invokestatic  #33                 // Method org/eclipse/jgit/util/SystemReader.setInstance:(Lorg/eclipse/jgit/util/SystemReader;)V
     124: aload_0       
     125: getfield      #23                 // Field mockSystemReader:Lorg/eclipse/jgit/junit/MockSystemReader;
     128: invokevirtual #34                 // Method org/eclipse/jgit/junit/MockSystemReader.getCurrentTime:()J
     131: lstore_1      
     132: aload_0       
     133: getfield      #23                 // Field mockSystemReader:Lorg/eclipse/jgit/junit/MockSystemReader;
     136: lload_1       
     137: invokevirtual #35                 // Method org/eclipse/jgit/junit/MockSystemReader.getTimezone:(J)I
     140: istore_3      
     141: aload_0       
     142: new           #36                 // class org/eclipse/jgit/lib/PersonIdent
     145: dup           
     146: ldc           #37                 // String J. Author
     148: ldc           #38                 // String jauthor@example.com
     150: invokespecial #39                 // Method org/eclipse/jgit/lib/PersonIdent."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     153: putfield      #40                 // Field author:Lorg/eclipse/jgit/lib/PersonIdent;
     156: aload_0       
     157: new           #36                 // class org/eclipse/jgit/lib/PersonIdent
     160: dup           
     161: aload_0       
     162: getfield      #40                 // Field author:Lorg/eclipse/jgit/lib/PersonIdent;
     165: lload_1       
     166: iload_3       
     167: invokespecial #41                 // Method org/eclipse/jgit/lib/PersonIdent."<init>":(Lorg/eclipse/jgit/lib/PersonIdent;JI)V
     170: putfield      #40                 // Field author:Lorg/eclipse/jgit/lib/PersonIdent;
     173: aload_0       
     174: new           #36                 // class org/eclipse/jgit/lib/PersonIdent
     177: dup           
     178: ldc           #42                 // String J. Committer
     180: ldc           #43                 // String jcommitter@example.com
     182: invokespecial #39                 // Method org/eclipse/jgit/lib/PersonIdent."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     185: putfield      #44                 // Field committer:Lorg/eclipse/jgit/lib/PersonIdent;
     188: aload_0       
     189: new           #36                 // class org/eclipse/jgit/lib/PersonIdent
     192: dup           
     193: aload_0       
     194: getfield      #44                 // Field committer:Lorg/eclipse/jgit/lib/PersonIdent;
     197: lload_1       
     198: iload_3       
     199: invokespecial #41                 // Method org/eclipse/jgit/lib/PersonIdent."<init>":(Lorg/eclipse/jgit/lib/PersonIdent;JI)V
     202: putfield      #44                 // Field committer:Lorg/eclipse/jgit/lib/PersonIdent;
     205: new           #45                 // class org/eclipse/jgit/storage/file/WindowCacheConfig
     208: dup           
     209: invokespecial #46                 // Method org/eclipse/jgit/storage/file/WindowCacheConfig."<init>":()V
     212: astore        4
     214: aload         4
     216: ldc2_w        #47                 // long 131072l
     219: invokevirtual #49                 // Method org/eclipse/jgit/storage/file/WindowCacheConfig.setPackedGitLimit:(J)V
     222: aload         4
     224: sipush        8192
     227: invokevirtual #50                 // Method org/eclipse/jgit/storage/file/WindowCacheConfig.setPackedGitWindowSize:(I)V
     230: aload         4
     232: getstatic     #51                 // Field useMMAP:Z
     235: invokevirtual #52                 // Method org/eclipse/jgit/storage/file/WindowCacheConfig.setPackedGitMMAP:(Z)V
     238: aload         4
     240: sipush        8192
     243: invokevirtual #53                 // Method org/eclipse/jgit/storage/file/WindowCacheConfig.setDeltaBaseCacheLimit:(I)V
     246: aload         4
     248: invokevirtual #54                 // Method org/eclipse/jgit/storage/file/WindowCacheConfig.install:()V
     251: return        

  protected java.io.File getTemporaryDirectory();
    Code:
       0: aload_0       
       1: getfield      #9                  // Field tmp:Ljava/io/File;
       4: invokevirtual #55                 // Method java/io/File.getAbsoluteFile:()Ljava/io/File;
       7: areturn       

  protected java.util.List<java.io.File> getCeilings();
    Code:
       0: aload_0       
       1: invokevirtual #56                 // Method getTemporaryDirectory:()Ljava/io/File;
       4: invokestatic  #57                 // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
       7: areturn       

  private void ceilTestDirectories(java.util.List<java.io.File>);
    Code:
       0: aload_0       
       1: getfield      #23                 // Field mockSystemReader:Lorg/eclipse/jgit/junit/MockSystemReader;
       4: ldc           #58                 // String GIT_CEILING_DIRECTORIES
       6: aload_1       
       7: invokestatic  #59                 // Method makePath:(Ljava/util/List;)Ljava/lang/String;
      10: invokevirtual #60                 // Method org/eclipse/jgit/junit/MockSystemReader.setProperty:(Ljava/lang/String;Ljava/lang/String;)V
      13: return        

  private static java.lang.String makePath(java.util.List<?>);
    Code:
       0: new           #14                 // class java/lang/StringBuilder
       3: dup           
       4: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1      
       8: aload_0       
       9: invokeinterface #61,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      14: astore_2      
      15: aload_2       
      16: invokeinterface #62,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          58
      24: aload_2       
      25: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: astore_3      
      31: aload_1       
      32: invokevirtual #64                 // Method java/lang/StringBuilder.length:()I
      35: ifle          46
      38: aload_1       
      39: getstatic     #65                 // Field java/io/File.pathSeparatorChar:C
      42: invokevirtual #66                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      45: pop           
      46: aload_1       
      47: aload_3       
      48: invokevirtual #67                 // Method java/lang/Object.toString:()Ljava/lang/String;
      51: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: pop           
      55: goto          15
      58: aload_1       
      59: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      62: areturn       

  public void tearDown() throws java.lang.Exception;
    Code:
       0: invokestatic  #68                 // Method org/eclipse/jgit/lib/RepositoryCache.clear:()V
       3: aload_0       
       4: getfield      #5                  // Field toClose:Ljava/util/List;
       7: invokeinterface #61,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      12: astore_1      
      13: aload_1       
      14: invokeinterface #62,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          39
      22: aload_1       
      23: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #69                 // class org/eclipse/jgit/lib/Repository
      31: astore_2      
      32: aload_2       
      33: invokevirtual #70                 // Method org/eclipse/jgit/lib/Repository.close:()V
      36: goto          13
      39: aload_0       
      40: getfield      #5                  // Field toClose:Ljava/util/List;
      43: invokeinterface #71,  1           // InterfaceMethod java/util/List.clear:()V
      48: getstatic     #51                 // Field useMMAP:Z
      51: ifeq          57
      54: invokestatic  #72                 // Method java/lang/System.gc:()V
      57: aload_0       
      58: getfield      #9                  // Field tmp:Ljava/io/File;
      61: ifnull        74
      64: aload_0       
      65: getfield      #9                  // Field tmp:Ljava/io/File;
      68: iconst_0      
      69: iconst_1      
      70: invokestatic  #1                  // Method recursiveDelete:(Ljava/io/File;ZZ)Z
      73: pop           
      74: aload_0       
      75: getfield      #9                  // Field tmp:Ljava/io/File;
      78: ifnull        98
      81: aload_0       
      82: getfield      #9                  // Field tmp:Ljava/io/File;
      85: invokevirtual #73                 // Method java/io/File.exists:()Z
      88: ifne          98
      91: aload_0       
      92: getfield      #9                  // Field tmp:Ljava/io/File;
      95: invokestatic  #74                 // Method org/eclipse/jgit/junit/LocalDiskRepositoryTestCase$CleanupThread.removed:(Ljava/io/File;)V
      98: aconst_null   
      99: invokestatic  #33                 // Method org/eclipse/jgit/util/SystemReader.setInstance:(Lorg/eclipse/jgit/util/SystemReader;)V
     102: return        

  protected void tick();
    Code:
       0: getstatic     #75                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
       3: ldc2_w        #76                 // long 300l
       6: getstatic     #78                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
       9: invokevirtual #79                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      12: lstore_1      
      13: aload_0       
      14: getfield      #40                 // Field author:Lorg/eclipse/jgit/lib/PersonIdent;
      17: invokevirtual #80                 // Method org/eclipse/jgit/lib/PersonIdent.getWhen:()Ljava/util/Date;
      20: invokevirtual #81                 // Method java/util/Date.getTime:()J
      23: lload_1       
      24: ladd          
      25: lstore_3      
      26: aload_0       
      27: getfield      #23                 // Field mockSystemReader:Lorg/eclipse/jgit/junit/MockSystemReader;
      30: lload_3       
      31: invokevirtual #35                 // Method org/eclipse/jgit/junit/MockSystemReader.getTimezone:(J)I
      34: istore        5
      36: aload_0       
      37: new           #36                 // class org/eclipse/jgit/lib/PersonIdent
      40: dup           
      41: aload_0       
      42: getfield      #40                 // Field author:Lorg/eclipse/jgit/lib/PersonIdent;
      45: lload_3       
      46: iload         5
      48: invokespecial #41                 // Method org/eclipse/jgit/lib/PersonIdent."<init>":(Lorg/eclipse/jgit/lib/PersonIdent;JI)V
      51: putfield      #40                 // Field author:Lorg/eclipse/jgit/lib/PersonIdent;
      54: aload_0       
      55: new           #36                 // class org/eclipse/jgit/lib/PersonIdent
      58: dup           
      59: aload_0       
      60: getfield      #44                 // Field committer:Lorg/eclipse/jgit/lib/PersonIdent;
      63: lload_3       
      64: iload         5
      66: invokespecial #41                 // Method org/eclipse/jgit/lib/PersonIdent."<init>":(Lorg/eclipse/jgit/lib/PersonIdent;JI)V
      69: putfield      #44                 // Field committer:Lorg/eclipse/jgit/lib/PersonIdent;
      72: return        

  protected void recursiveDelete(java.io.File);
    Code:
       0: aload_1       
       1: iconst_0      
       2: iconst_1      
       3: invokestatic  #1                  // Method recursiveDelete:(Ljava/io/File;ZZ)Z
       6: pop           
       7: return        

  private static boolean recursiveDelete(java.io.File, boolean, boolean);
    Code:
       0: getstatic     #82                 // Field $assertionsDisabled:Z
       3: ifne          22
       6: iload_1       
       7: ifeq          22
      10: iload_2       
      11: ifeq          22
      14: new           #83                 // class java/lang/AssertionError
      17: dup           
      18: invokespecial #84                 // Method java/lang/AssertionError."<init>":()V
      21: athrow        
      22: aload_0       
      23: invokevirtual #73                 // Method java/io/File.exists:()Z
      26: ifne          31
      29: iload_1       
      30: ireturn       
      31: aload_0       
      32: invokevirtual #85                 // Method java/io/File.listFiles:()[Ljava/io/File;
      35: astore_3      
      36: aload_3       
      37: ifnull        109
      40: iconst_0      
      41: istore        4
      43: iload         4
      45: aload_3       
      46: arraylength   
      47: if_icmpge     109
      50: aload_3       
      51: iload         4
      53: aaload        
      54: astore        5
      56: aload         5
      58: invokevirtual #86                 // Method java/io/File.isDirectory:()Z
      61: ifeq          75
      64: aload         5
      66: iload_1       
      67: iload_2       
      68: invokestatic  #1                  // Method recursiveDelete:(Ljava/io/File;ZZ)Z
      71: istore_1      
      72: goto          103
      75: aload         5
      77: invokevirtual #11                 // Method java/io/File.delete:()Z
      80: ifne          103
      83: iload_1       
      84: ifne          93
      87: iload_2       
      88: aload         5
      90: invokestatic  #87                 // Method reportDeleteFailure:(ZLjava/io/File;)V
      93: iload_2       
      94: ifne          101
      97: iconst_1      
      98: goto          102
     101: iconst_0      
     102: istore_1      
     103: iinc          4, 1
     106: goto          43
     109: aload_0       
     110: invokevirtual #11                 // Method java/io/File.delete:()Z
     113: ifne          135
     116: iload_1       
     117: ifne          125
     120: iload_2       
     121: aload_0       
     122: invokestatic  #87                 // Method reportDeleteFailure:(ZLjava/io/File;)V
     125: iload_2       
     126: ifne          133
     129: iconst_1      
     130: goto          134
     133: iconst_0      
     134: istore_1      
     135: iload_1       
     136: ireturn       

  private static void reportDeleteFailure(boolean, java.io.File);
    Code:
       0: iload_0       
       1: ifeq          9
       4: ldc           #88                 // String ERROR
       6: goto          11
       9: ldc           #89                 // String WARNING
      11: astore_2      
      12: new           #14                 // class java/lang/StringBuilder
      15: dup           
      16: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      19: aload_2       
      20: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: ldc           #90                 // String : Failed to delete 
      25: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_1       
      29: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      32: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: astore_3      
      36: iload_0       
      37: ifeq          47
      40: aload_3       
      41: invokestatic  #91                 // Method org/junit/Assert.fail:(Ljava/lang/String;)V
      44: goto          54
      47: getstatic     #92                 // Field java/lang/System.err:Ljava/io/PrintStream;
      50: aload_3       
      51: invokevirtual #93                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      54: return        

  protected org.eclipse.jgit.internal.storage.file.FileRepository createBareRepository() throws java.io.IOException;
    Code:
       0: aload_0       
       1: iconst_1      
       2: invokespecial #94                 // Method createRepository:(Z)Lorg/eclipse/jgit/internal/storage/file/FileRepository;
       5: areturn       

  protected org.eclipse.jgit.internal.storage.file.FileRepository createWorkRepository() throws java.io.IOException;
    Code:
       0: aload_0       
       1: iconst_0      
       2: invokespecial #94                 // Method createRepository:(Z)Lorg/eclipse/jgit/internal/storage/file/FileRepository;
       5: areturn       

  private org.eclipse.jgit.internal.storage.file.FileRepository createRepository(boolean) throws java.io.IOException;
    Code:
       0: aload_0       
       1: iload_1       
       2: invokevirtual #95                 // Method createUniqueTestGitDir:(Z)Ljava/io/File;
       5: astore_2      
       6: new           #96                 // class org/eclipse/jgit/internal/storage/file/FileRepository
       9: dup           
      10: aload_2       
      11: invokespecial #97                 // Method org/eclipse/jgit/internal/storage/file/FileRepository."<init>":(Ljava/io/File;)V
      14: astore_3      
      15: aload_2       
      16: invokevirtual #73                 // Method java/io/File.exists:()Z
      19: invokestatic  #98                 // Method org/junit/Assert.assertFalse:(Z)V
      22: aload_3       
      23: iload_1       
      24: invokevirtual #99                 // Method org/eclipse/jgit/internal/storage/file/FileRepository.create:(Z)V
      27: aload_0       
      28: getfield      #5                  // Field toClose:Ljava/util/List;
      31: aload_3       
      32: invokeinterface #100,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      37: pop           
      38: aload_3       
      39: areturn       

  public void addRepoToClose(org.eclipse.jgit.lib.Repository);
    Code:
       0: aload_0       
       1: getfield      #5                  // Field toClose:Ljava/util/List;
       4: aload_1       
       5: invokeinterface #100,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop           
      11: return        

  protected java.io.File createTempDirectory(java.lang.String) throws java.io.IOException;
    Code:
       0: new           #25                 // class java/io/File
       3: dup           
       4: aload_0       
       5: invokevirtual #101                // Method createTempFile:()Ljava/io/File;
       8: aload_1       
       9: invokespecial #27                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      12: astore_2      
      13: aload_2       
      14: invokestatic  #102                // Method org/eclipse/jgit/util/FileUtils.mkdirs:(Ljava/io/File;)V
      17: aload_2       
      18: invokevirtual #103                // Method java/io/File.getCanonicalFile:()Ljava/io/File;
      21: areturn       

  protected java.io.File createUniqueTestGitDir(boolean) throws java.io.IOException;
    Code:
       0: aload_0       
       1: invokevirtual #101                // Method createTempFile:()Ljava/io/File;
       4: invokevirtual #104                // Method java/io/File.getPath:()Ljava/lang/String;
       7: astore_2      
       8: iload_1       
       9: ifne          32
      12: new           #14                 // class java/lang/StringBuilder
      15: dup           
      16: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      19: aload_2       
      20: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: ldc           #105                // String /
      25: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: astore_2      
      32: new           #25                 // class java/io/File
      35: dup           
      36: new           #14                 // class java/lang/StringBuilder
      39: dup           
      40: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      43: aload_2       
      44: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: ldc           #106                // String .git
      49: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      55: invokespecial #107                // Method java/io/File."<init>":(Ljava/lang/String;)V
      58: areturn       

  protected java.io.File createTempFile() throws java.io.IOException;
    Code:
       0: ldc           #108                // String tmp_
       2: ldc           #109                // String 
       4: aload_0       
       5: getfield      #9                  // Field tmp:Ljava/io/File;
       8: invokestatic  #110                // Method java/io/File.createTempFile:(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
      11: astore_1      
      12: aload_1       
      13: invokevirtual #11                 // Method java/io/File.delete:()Z
      16: ifne          49
      19: new           #13                 // class java/io/IOException
      22: dup           
      23: new           #14                 // class java/lang/StringBuilder
      26: dup           
      27: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #111                // String Cannot obtain unique path 
      32: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0       
      36: getfield      #9                  // Field tmp:Ljava/io/File;
      39: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      42: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: invokespecial #20                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      48: athrow        
      49: aload_1       
      50: areturn       

  protected int runHook(org.eclipse.jgit.lib.Repository, java.io.File, java.lang.String...) throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: iconst_1      
       1: aload_3       
       2: arraylength   
       3: iadd          
       4: anewarray     #112                // class java/lang/String
       7: astore        4
       9: aload         4
      11: iconst_0      
      12: aload_2       
      13: invokevirtual #113                // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      16: aastore       
      17: aload_3       
      18: iconst_0      
      19: aload         4
      21: iconst_1      
      22: aload_3       
      23: arraylength   
      24: invokestatic  #114                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      27: invokestatic  #115                // Method cloneEnv:()Ljava/util/HashMap;
      30: astore        5
      32: aload         5
      34: ldc           #116                // String GIT_DIR
      36: aload_1       
      37: invokevirtual #117                // Method org/eclipse/jgit/lib/Repository.getDirectory:()Ljava/io/File;
      40: invokevirtual #113                // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      43: invokeinterface #118,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      48: pop           
      49: aload         5
      51: ldc           #119                // String AUTHOR
      53: aload_0       
      54: getfield      #40                 // Field author:Lorg/eclipse/jgit/lib/PersonIdent;
      57: invokestatic  #120                // Method putPersonIdent:(Ljava/util/Map;Ljava/lang/String;Lorg/eclipse/jgit/lib/PersonIdent;)V
      60: aload         5
      62: ldc           #121                // String COMMITTER
      64: aload_0       
      65: getfield      #44                 // Field committer:Lorg/eclipse/jgit/lib/PersonIdent;
      68: invokestatic  #120                // Method putPersonIdent:(Ljava/util/Map;Ljava/lang/String;Lorg/eclipse/jgit/lib/PersonIdent;)V
      71: aload_1       
      72: invokevirtual #122                // Method org/eclipse/jgit/lib/Repository.getWorkTree:()Ljava/io/File;
      75: astore        6
      77: invokestatic  #123                // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
      80: aload         4
      82: aload         5
      84: invokestatic  #124                // Method toEnvArray:(Ljava/util/Map;)[Ljava/lang/String;
      87: aload         6
      89: invokevirtual #125                // Method java/lang/Runtime.exec:([Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;)Ljava/lang/Process;
      92: astore        7
      94: aload         7
      96: invokevirtual #126                // Method java/lang/Process.getOutputStream:()Ljava/io/OutputStream;
      99: invokevirtual #127                // Method java/io/OutputStream.close:()V
     102: aload         7
     104: invokevirtual #128                // Method java/lang/Process.getErrorStream:()Ljava/io/InputStream;
     107: invokevirtual #129                // Method java/io/InputStream.close:()V
     110: aload         7
     112: invokevirtual #130                // Method java/lang/Process.getInputStream:()Ljava/io/InputStream;
     115: invokevirtual #129                // Method java/io/InputStream.close:()V
     118: aload         7
     120: invokevirtual #131                // Method java/lang/Process.waitFor:()I
     123: ireturn       

  private static void putPersonIdent(java.util.Map<java.lang.String, java.lang.String>, java.lang.String, org.eclipse.jgit.lib.PersonIdent);
    Code:
       0: aload_2       
       1: invokevirtual #132                // Method org/eclipse/jgit/lib/PersonIdent.toExternalString:()Ljava/lang/String;
       4: astore_3      
       5: aload_3       
       6: aload_3       
       7: ldc           #133                // String > 
       9: invokevirtual #134                // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      12: iconst_2      
      13: iadd          
      14: invokevirtual #135                // Method java/lang/String.substring:(I)Ljava/lang/String;
      17: astore        4
      19: aload_0       
      20: new           #14                 // class java/lang/StringBuilder
      23: dup           
      24: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      27: ldc           #136                // String GIT_
      29: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: aload_1       
      33: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: ldc           #137                // String _NAME
      38: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: aload_2       
      45: invokevirtual #138                // Method org/eclipse/jgit/lib/PersonIdent.getName:()Ljava/lang/String;
      48: invokeinterface #118,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      53: pop           
      54: aload_0       
      55: new           #14                 // class java/lang/StringBuilder
      58: dup           
      59: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      62: ldc           #136                // String GIT_
      64: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: aload_1       
      68: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: ldc           #139                // String _EMAIL
      73: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      79: aload_2       
      80: invokevirtual #140                // Method org/eclipse/jgit/lib/PersonIdent.getEmailAddress:()Ljava/lang/String;
      83: invokeinterface #118,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      88: pop           
      89: aload_0       
      90: new           #14                 // class java/lang/StringBuilder
      93: dup           
      94: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      97: ldc           #136                // String GIT_
      99: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     102: aload_1       
     103: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     106: ldc           #141                // String _DATE
     108: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     111: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     114: aload         4
     116: invokeinterface #118,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     121: pop           
     122: return        

  protected java.io.File write(java.lang.String) throws java.io.IOException;
    Code:
       0: ldc           #142                // String temp
       2: ldc           #143                // String txt
       4: aload_0       
       5: getfield      #9                  // Field tmp:Ljava/io/File;
       8: invokestatic  #110                // Method java/io/File.createTempFile:(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
      11: astore_2      
      12: aload_0       
      13: aload_2       
      14: aload_1       
      15: invokevirtual #144                // Method write:(Ljava/io/File;Ljava/lang/String;)V
      18: aload_2       
      19: areturn       
      20: astore_3      
      21: aload_2       
      22: invokevirtual #11                 // Method java/io/File.delete:()Z
      25: pop           
      26: aload_3       
      27: athrow        
      28: astore_3      
      29: aload_2       
      30: invokevirtual #11                 // Method java/io/File.delete:()Z
      33: pop           
      34: aload_3       
      35: athrow        
      36: astore_3      
      37: aload_2       
      38: invokevirtual #11                 // Method java/io/File.delete:()Z
      41: pop           
      42: aload_3       
      43: athrow        
    Exception table:
       from    to  target type
          12    19    20   Class java/lang/Error
          12    19    28   Class java/lang/RuntimeException
          12    19    36   Class java/io/IOException

  protected void write(java.io.File, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_1       
       1: aload_2       
       2: invokestatic  #147                // Method org/eclipse/jgit/junit/JGitTestUtil.write:(Ljava/io/File;Ljava/lang/String;)V
       5: return        

  protected java.lang.String read(java.io.File) throws java.io.IOException;
    Code:
       0: aload_1       
       1: invokestatic  #148                // Method org/eclipse/jgit/junit/JGitTestUtil.read:(Ljava/io/File;)Ljava/lang/String;
       4: areturn       

  private static java.lang.String[] toEnvArray(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0       
       1: invokeinterface #149,  1          // InterfaceMethod java/util/Map.size:()I
       6: anewarray     #112                // class java/lang/String
       9: astore_1      
      10: iconst_0      
      11: istore_2      
      12: aload_0       
      13: invokeinterface #150,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      18: invokeinterface #151,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      23: astore_3      
      24: aload_3       
      25: invokeinterface #62,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          94
      33: aload_3       
      34: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #152                // class java/util/Map$Entry
      42: astore        4
      44: aload_1       
      45: iload_2       
      46: iinc          2, 1
      49: new           #14                 // class java/lang/StringBuilder
      52: dup           
      53: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      56: aload         4
      58: invokeinterface #153,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      63: checkcast     #112                // class java/lang/String
      66: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: ldc           #154                // String =
      71: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload         4
      76: invokeinterface #155,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      81: checkcast     #112                // class java/lang/String
      84: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      90: aastore       
      91: goto          24
      94: aload_1       
      95: areturn       

  private static java.util.HashMap<java.lang.String, java.lang.String> cloneEnv();
    Code:
       0: new           #156                // class java/util/HashMap
       3: dup           
       4: invokestatic  #157                // Method java/lang/System.getenv:()Ljava/util/Map;
       7: invokespecial #158                // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      10: areturn       

  static boolean access$000(java.io.File, boolean, boolean);
    Code:
       0: aload_0       
       1: iload_1       
       2: iload_2       
       3: invokestatic  #1                  // Method recursiveDelete:(Ljava/io/File;ZZ)Z
       6: ireturn       

  static {};
    Code:
       0: ldc_w         #159                // class org/eclipse/jgit/junit/LocalDiskRepositoryTestCase
       3: invokevirtual #160                // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1      
      10: goto          14
      13: iconst_0      
      14: putstatic     #82                 // Field $assertionsDisabled:Z
      17: ldc           #161                // String true
      19: ldc           #162                // String jgit.junit.usemmap
      21: invokestatic  #163                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      24: invokevirtual #164                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      27: putstatic     #51                 // Field useMMAP:Z
      30: return        
}
